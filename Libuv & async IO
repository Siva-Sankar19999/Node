->Node.js has an event driven architecture and handles I/O operations asynchronusly.

->Javascript is Synchronus and Single threaded language.But Node js provides some helper functions for 
  doing asynchronus tasks.

->Before learning thread, I need to learn what is "Process" and threads exist in process.

->Process is an instance of running program(running program means OS in a computer)
  It has it's own memory,CPU etc
  eg:
  When you open a chrome web browser in a computer, OS creates a separate process for it.
  and after that you open a notepad in computer, OS creates a separate process for it.
  If one crashes does not disturb other one.(This is main)

->What is thread?
  Thread enable a program to perform multiple tasks concurrently by sharing process's memory and resource.
  Threads exists inside a process and share's process memory and resources
  Each thread works on a different thing and complete concurrent tasks parallely.

->Actually javascript is synchronous, But to perform async tasks(like file access, db access,timers). Node js add some super power called
  eg:(ibuv etc..) to javascript to handle async tasks.

->v8 js engine offloads(delegates) async tasks to libuv and normal js tasks can v8 engine handle.

->LibUV is written in C library and used to handle asynchronous I/O.

->Once after the async I/O completed. Libuv put the callback in the callstack in v8 engine.
